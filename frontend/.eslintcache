[{"/var/www/thiagoListaTarefas/frontend/src/reportWebVitals.js":"1","/var/www/thiagoListaTarefas/frontend/src/index.js":"2","/var/www/thiagoListaTarefas/frontend/src/App.js":"3","/var/www/thiagoListaTarefas/frontend/src/components/HomeScreen/index.js":"4","/var/www/thiagoListaTarefas/frontend/src/components/HomeScreen/styled.js":"5","/var/www/thiagoListaTarefas/frontend/src/components/ListTask/styled.js":"6","/var/www/thiagoListaTarefas/frontend/src/components/ListTask/index.js":"7","/var/www/thiagoListaTarefas/frontend/src/components/ContainerGridItems/index.js":"8","/var/www/thiagoListaTarefas/frontend/src/components/ContainerGridItems/styled.js":"9","/var/www/thiagoListaTarefas/frontend/src/components/CompleteTask/index.js":"10","/var/www/thiagoListaTarefas/frontend/src/components/CompleteTask/styled.js":"11","/var/www/thiagoListaTarefas/frontend/src/components/RemoveTask/index.js":"12","/var/www/thiagoListaTarefas/frontend/src/components/RemoveTask/styled.js":"13","/var/www/thiagoListaTarefas/frontend/src/components/UpdateTask/index.js":"14","/var/www/thiagoListaTarefas/frontend/src/components/RegisterTask/index.js":"15","/var/www/thiagoListaTarefas/frontend/src/components/RegisterTask/styled.js":"16","/var/www/thiagoListaTarefas/frontend/src/models/task.model.js":"17","/var/www/thiagoListaTarefas/frontend/src/components/Ordination/index.js":"18","/var/www/thiagoListaTarefas/frontend/src/components/UpdateTask/styled.js":"19","/var/www/thiagoListaTarefas/frontend/src/components/Ordination/styled.js":"20"},{"size":362,"mtime":1611447006029,"results":"21","hashOfConfig":"22"},{"size":530,"mtime":1611450969519,"results":"23","hashOfConfig":"22"},{"size":422,"mtime":1611703907756,"results":"24","hashOfConfig":"22"},{"size":874,"mtime":1611458052219,"results":"25","hashOfConfig":"22"},{"size":511,"mtime":1611453957474,"results":"26","hashOfConfig":"22"},{"size":750,"mtime":1611618032311,"results":"27","hashOfConfig":"22"},{"size":3980,"mtime":1611715408745,"results":"28","hashOfConfig":"22"},{"size":1096,"mtime":1611704680770,"results":"29","hashOfConfig":"22"},{"size":111,"mtime":1611540639261,"results":"30","hashOfConfig":"22"},{"size":2299,"mtime":1611701787428,"results":"31","hashOfConfig":"22"},{"size":257,"mtime":1611540139611,"results":"32","hashOfConfig":"22"},{"size":2251,"mtime":1611700885090,"results":"33","hashOfConfig":"22"},{"size":103,"mtime":1611540883463,"results":"34","hashOfConfig":"22"},{"size":3078,"mtime":1611703566300,"results":"35","hashOfConfig":"22"},{"size":3003,"mtime":1611703005627,"results":"36","hashOfConfig":"22"},{"size":104,"mtime":1611617635353,"results":"37","hashOfConfig":"22"},{"size":217,"mtime":1611623718536,"results":"38","hashOfConfig":"22"},{"size":793,"mtime":1611715354265,"results":"39","hashOfConfig":"22"},{"size":85,"mtime":1611526724085,"results":"40","hashOfConfig":"22"},{"size":449,"mtime":1611714615480,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"63km96",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/thiagoListaTarefas/frontend/src/reportWebVitals.js",[],["89","90"],"/var/www/thiagoListaTarefas/frontend/src/index.js",[],["91","92"],"/var/www/thiagoListaTarefas/frontend/src/App.js",["93","94"],"/var/www/thiagoListaTarefas/frontend/src/components/HomeScreen/index.js",["95","96"],"/var/www/thiagoListaTarefas/frontend/src/components/HomeScreen/styled.js",[],"/var/www/thiagoListaTarefas/frontend/src/components/ListTask/styled.js",[],"/var/www/thiagoListaTarefas/frontend/src/components/ListTask/index.js",["97","98","99","100","101"],"/var/www/thiagoListaTarefas/frontend/src/components/ContainerGridItems/index.js",["102","103"],"import React, {useState} from 'react';\nimport CompleteTask from '../CompleteTask';\nimport RemoveTask from '../RemoveTask';\nimport UpdateTask from '../UpdateTask';\n\nimport {\n  Container\n} from './styled';\n\nexport default (props) => {\n\n  const [openModal, setOpenModal] = useState(false);\n\n  function completed(item) {\n    return item.concluida ? 'line-through' : 'none';\n  }\n\n  return (\n    <Container>\n      {props.tasks.map((item) =>\n        <tr key={item.id}>\n\n          <td width='10%'>\n            <CompleteTask taskComplete={item} loadTask={props.loadTask} hideIcon={item.concluida ? 'hidden' : null} />\n          </td>\n\n          <td width='80%' style={{ textDecoration: completed(item) }}>\n            {item.nome}\n          </td>\n\n          <td style={{ display: 'flex', justifyContent: 'center' }}>\n            {item.concluida === false &&\n              <UpdateTask taskUpdateId={item.id} loadTask={props.loadTask} openModal={openModal} />\n            }\n            <RemoveTask taskRemove={item} loadTask={props.loadTask} />\n          </td>\n\n        </tr>\n      )}\n    </Container>\n  );\n}","/var/www/thiagoListaTarefas/frontend/src/components/ContainerGridItems/styled.js",[],"/var/www/thiagoListaTarefas/frontend/src/components/CompleteTask/index.js",["104","105","106"],"import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport imageIconCheck from '../../image/concluir.svg';\n\nimport {\n  Container\n} from './styled';\n\nexport default (props) => {\n  const [displayModal, setDisplayModal] = useState(false);\n  const [displayModalErro, setDisplayModalErro] = useState(false);\n\n  const API_URL_CONCLUDE_TASK = 'http://localhost:3002/gerenciador-tarefas/';\n\n  function handleOpenModal(event) {\n    event.preventDefault();\n    setDisplayModal(true);\n  }\n\n  function handleCloseModal() {\n    setDisplayModal(false);\n  }\n\n  function handleCloseModalErro() {\n    setDisplayModalErro(false);\n  }\n\n  async function handleConcludeTask(event) {\n    event.preventDefault();\n\n    try {\n      let { tarefa } = await axios.put(API_URL_CONCLUDE_TASK + props.taskComplete.id + '/concluir');\n      setDisplayModal(false);\n      props.loadTask(true);\n    } catch (error) {\n      setDisplayModal(false);\n      setDisplayModalErro(true);\n    }\n  }\n\n  return (\n    <Container className={props.taskComplete.concluida}>\n\n      <img src={imageIconCheck} style={{width: '30px', height: '30px', cursor: 'pointer'} } onClick={handleOpenModal}/>\n\n      <Modal show={displayModal} onHide={handleCloseModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Concluir Tarefa</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Deseja Realmente concluir a seguinte tarefa?\n          <br/>\n          <strong>{props.taskComplete.nome}</strong>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleConcludeTask}> \n            Sim\n          </Button>\n          <Button variant=\"light\" onClick={handleCloseModal}> \n            Não\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={displayModalErro} onHide={handleCloseModalErro}>\n        <Modal.Header closeButton>\n          <Modal.Title>Erro de conexão</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Erro ao concluir a tarefa, por favor tente novamente!\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"warning\" onClick={handleCloseModalErro}>\n            Continuar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n}","/var/www/thiagoListaTarefas/frontend/src/components/CompleteTask/styled.js",["107"],"import styled from 'styled-components';\nimport imageIconCheck from '../../image/concluir.svg';\n\n\nexport const Container = styled.span`\n    display: ${props => props.className ? 'none' : 'block'};\n    justify-content: center;\n    text-align: center;\n    \n`;\n","/var/www/thiagoListaTarefas/frontend/src/components/RemoveTask/index.js",["108","109","110"],"/var/www/thiagoListaTarefas/frontend/src/components/RemoveTask/styled.js",[],"/var/www/thiagoListaTarefas/frontend/src/components/UpdateTask/index.js",["111","112"],"import React, { useState, useEffect } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport imageUpdate from '../../image/editar.png';\n\nimport TaskUpdateModel from '../../models/task.model';\n\nimport {\n  Container\n} from './styled';\n\nexport default (props) => {\n\n  const [displayModal, setDisplayModal] = useState(false);\n  const [displayModalErro, setDisplayModalErro] = useState(false);\n  const [task, setTask] = useState('');\n  const [loadTask, setLoadTask] = useState(true);\n\n\n  const API_URL_UPDATE_TASK = 'http://localhost:3002/gerenciador-tarefas/';\n\n  function handleTextTask(event) {\n    setTask(event.target.value);\n  }\n\n  function handleCloseModal() {\n    setDisplayModal(false);\n  }\n\n  function handleCloseModalErro() {\n    setDisplayModalErro(false);\n  }\n\n  useEffect(() => {\n\n    async function getTask() {\n\n      try {\n        let { data } = await axios.get(API_URL_UPDATE_TASK + props.taskUpdateId);\n        setTask(data.nome);\n      } catch (error) {\n        setDisplayModal(false);\n        setDisplayModalErro(true);\n      }\n    }\n\n    if (loadTask) {\n      getTask();\n      setLoadTask(true);\n    }\n  }, [loadTask, props]);\n\n  async function handleUpdate(event) {\n    event.preventDefault();\n\n    try {\n      const taskUpdate = new TaskUpdateModel(null, task, false);\n      await axios.put(API_URL_UPDATE_TASK + props.taskUpdateId, taskUpdate);\n      setDisplayModal(false);\n      props.loadTask(true);\n      setTask('');\n    } catch (error) {\n      setDisplayModal(false);\n      setDisplayModalErro(true);\n    }\n  }\n\n  return (\n    <Container>\n\n      <img src={imageUpdate} style={{ width: '30px', height: '30px', cursor: 'pointer' }} onClick={setDisplayModal} />\n\n      <Modal show={displayModal} onHide={handleCloseModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Atualizar Tarefa</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form>\n            <Form.Group>\n              <Form.Control type=\"text\" minLength=\"5\" maxLength=\"100\" required value={task} onChange={handleTextTask}>\n              </Form.Control>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Form.Group>\n            <Button variant=\"success\" className=\" btn btn-success btn-sm\" onClick={handleUpdate} >\n              Alterar\n            </Button>\n            &nbsp;\n            <Button variant=\"danger\" className=\" btn btn-success btn-sm\" onClick={handleCloseModal}>\n              Cancelar\n            </Button>\n          </Form.Group>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={displayModalErro} onHide={handleCloseModalErro}>\n        <Modal.Header closeButton>\n          <Modal.Title>Erro de conexão</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Erro ao cadastrar, por favor tente novamente!\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={handleCloseModalErro}>\n            Continuar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n}","/var/www/thiagoListaTarefas/frontend/src/components/RegisterTask/index.js",["113","114"],"import React, { useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport Task from '../../models/task.model';\nimport axios from 'axios';\nimport iconPlus from '../../image/plus.png';\n\nimport {\n  Container\n} from './styled';\n\nexport default (props) => {\n\n  const API_URL_REGISTER_TASK = \"http://localhost:3002/gerenciador-tarefas\";\n\n  const [registerTask, setRegisterTask] = useState('');\n  const [displayModal, setDisplayModal] = useState(false);\n  const [displayModalErro, setDisplayModalErro] = useState(false);\n\n  async function handleRegister(event) {\n    event.preventDefault();\n\n    if (event.currentTarget.checkValidity() === true) {\n      try {\n        const newTask = new Task(null, registerTask, false);\n        await axios.post(API_URL_REGISTER_TASK, newTask);\n        handleCloseModal();\n        props.loadTask(true);        \n        setRegisterTask('');\n      } catch (error) {\n        setDisplayModalErro(true);\n        setDisplayModal(false);\n      }\n    }\n  }\n\n  function handleTextTask(event) {\n    setRegisterTask(event.target.value);\n  }\n\n  function handleCloseModal() {\n    setDisplayModal(false);\n  }\n\n  function handleCloseModalErro() {\n    setDisplayModalErro(false);\n  }\n\n  function handleOpenModal() {\n    setDisplayModal(true);\n  }\n\n  return (\n    <Container>\n      <Button onClick={handleOpenModal} variant=\"success\" style={{ color: '#000000', margin: '10px', borderRadius: '10px', display: 'flex', alignItems: 'center' }}>\n        Adicionar\n        <img src={iconPlus} style={{ width: '30px', height: '30px', marginLeft: '15px' }} />\n      </Button>\n\n      <Modal show={displayModal} onHide={handleCloseModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Cadastrar Tarefa</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form>\n            <Form.Group>\n              <Form.Control type=\"text\" placeholder=\"Informe a Tarefa\" minLength=\"5\" maxLength=\"100\" required value={registerTask} onChange={handleTextTask}>\n              </Form.Control>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Form.Group>\n            <Button variant=\"success\" className=\" btn btn-success btn-sm\" onClick={handleRegister} >\n              Adicionar\n            </Button>\n            &nbsp;\n            <Button variant=\"danger\" className=\" btn btn-success btn-sm\" onClick={handleCloseModal}>\n              Cancelar\n            </Button>\n          </Form.Group>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={displayModalErro} onHide={handleCloseModalErro}>\n        <Modal.Header closeButton>\n          <Modal.Title>Erro de conexão</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Erro ao cadastrar, por favor tente novamente!\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={handleCloseModalErro}>\n            Continuar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      \n    </Container>\n  );\n}","/var/www/thiagoListaTarefas/frontend/src/components/RegisterTask/styled.js",[],"/var/www/thiagoListaTarefas/frontend/src/models/task.model.js",[],"/var/www/thiagoListaTarefas/frontend/src/components/Ordination/index.js",["115"],"/var/www/thiagoListaTarefas/frontend/src/components/UpdateTask/styled.js",[],"/var/www/thiagoListaTarefas/frontend/src/components/Ordination/styled.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"116","replacedBy":"120"},{"ruleId":"118","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":20},{"ruleId":"122","severity":1,"message":"126","line":7,"column":8,"nodeType":"124","messageId":"125","endLine":7,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":14,"column":1,"nodeType":"129","endLine":37,"endColumn":2},{"ruleId":"122","severity":1,"message":"130","line":16,"column":12,"nodeType":"124","messageId":"125","endLine":16,"endColumn":30},{"ruleId":"127","severity":1,"message":"128","line":20,"column":1,"nodeType":"129","endLine":113,"endColumn":2},{"ruleId":"122","severity":1,"message":"131","line":23,"column":23,"nodeType":"124","messageId":"125","endLine":23,"endColumn":35},{"ruleId":"132","severity":1,"message":"133","line":56,"column":8,"nodeType":"134","endLine":56,"endColumn":30,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":91,"column":17,"nodeType":"138","endLine":91,"endColumn":119},{"ruleId":"139","severity":1,"message":"140","line":102,"column":33,"nodeType":"138","endLine":102,"endColumn":117},{"ruleId":"127","severity":1,"message":"128","line":10,"column":1,"nodeType":"129","endLine":42,"endColumn":2},{"ruleId":"122","severity":1,"message":"131","line":12,"column":21,"nodeType":"124","messageId":"125","endLine":12,"endColumn":33},{"ruleId":"127","severity":1,"message":"128","line":10,"column":1,"nodeType":"129","endLine":81,"endColumn":2},{"ruleId":"122","severity":1,"message":"141","line":33,"column":13,"nodeType":"124","messageId":"125","endLine":33,"endColumn":19},{"ruleId":"136","severity":1,"message":"137","line":45,"column":7,"nodeType":"138","endLine":45,"endColumn":120},{"ruleId":"122","severity":1,"message":"142","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":22},{"ruleId":"127","severity":1,"message":"128","line":10,"column":1,"nodeType":"129","endLine":84,"endColumn":2},{"ruleId":"122","severity":1,"message":"143","line":37,"column":12,"nodeType":"124","messageId":"125","endLine":37,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":48,"column":7,"nodeType":"138","endLine":48,"endColumn":119},{"ruleId":"127","severity":1,"message":"128","line":12,"column":1,"nodeType":"129","endLine":115,"endColumn":2},{"ruleId":"136","severity":1,"message":"137","line":71,"column":7,"nodeType":"138","endLine":71,"endColumn":119},{"ruleId":"127","severity":1,"message":"128","line":11,"column":1,"nodeType":"129","endLine":102,"endColumn":2},{"ruleId":"136","severity":1,"message":"137","line":56,"column":9,"nodeType":"138","endLine":56,"endColumn":93},{"ruleId":"127","severity":1,"message":"128","line":12,"column":1,"nodeType":"129","endLine":28,"endColumn":2},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],["144"],["145"],"no-unused-vars","'RegisterTask' is defined but never used.","Identifier","unusedVar","'UpdateTask' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'handlePageListTask' is defined but never used.","'setOpenModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ordinationAsc' and 'ordinationDesc'. Either include them or remove the dependency array.","ArrayExpression",["146"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'tarefa' is assigned a value but never used.","'imageIconCheck' is defined but never used.","'task' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},"Update the dependencies array to be: [loadTask, filterTask, ordinationAsc, ordinationDesc]",{"range":"149","text":"150"},[1864,1886],"[loadTask, filterTask, ordinationAsc, ordinationDesc]"]