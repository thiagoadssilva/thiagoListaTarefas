[{"/var/www/thiagoListaTarefas/frontend/src/reportWebVitals.js":"1","/var/www/thiagoListaTarefas/frontend/src/index.js":"2","/var/www/thiagoListaTarefas/frontend/src/App.js":"3","/var/www/thiagoListaTarefas/frontend/src/components/HomeScreen/index.js":"4","/var/www/thiagoListaTarefas/frontend/src/components/HomeScreen/styled.js":"5","/var/www/thiagoListaTarefas/frontend/src/components/ListTask/styled.js":"6","/var/www/thiagoListaTarefas/frontend/src/components/ListTask/index.js":"7","/var/www/thiagoListaTarefas/frontend/src/components/ContainerGridItems/index.js":"8","/var/www/thiagoListaTarefas/frontend/src/components/ContainerGridItems/styled.js":"9","/var/www/thiagoListaTarefas/frontend/src/components/CompleteTask/index.js":"10","/var/www/thiagoListaTarefas/frontend/src/components/CompleteTask/styled.js":"11","/var/www/thiagoListaTarefas/frontend/src/components/RemoveTask/index.js":"12","/var/www/thiagoListaTarefas/frontend/src/components/RemoveTask/styled.js":"13","/var/www/thiagoListaTarefas/frontend/src/components/UpdateTask/index.js":"14","/var/www/thiagoListaTarefas/frontend/src/components/RegisterTask/index.js":"15","/var/www/thiagoListaTarefas/frontend/src/components/RegisterTask/styled.js":"16","/var/www/thiagoListaTarefas/frontend/src/models/task.model.js":"17","/var/www/thiagoListaTarefas/frontend/src/components/Ordination/index.js":"18","/var/www/thiagoListaTarefas/frontend/src/components/UpdateTask/styled.js":"19","/var/www/thiagoListaTarefas/frontend/src/components/Ordination/styled.js":"20","/var/www/thiagoListaTarefas/frontend/src/components/Pagination/index.js":"21","/var/www/thiagoListaTarefas/frontend/src/components/Pagination/styled.js":"22"},{"size":362,"mtime":1611447006029,"results":"23","hashOfConfig":"24"},{"size":530,"mtime":1611450969519,"results":"25","hashOfConfig":"24"},{"size":422,"mtime":1611703907756,"results":"26","hashOfConfig":"24"},{"size":874,"mtime":1611458052219,"results":"27","hashOfConfig":"24"},{"size":511,"mtime":1611453957474,"results":"28","hashOfConfig":"24"},{"size":917,"mtime":1611790743071,"results":"29","hashOfConfig":"24"},{"size":4635,"mtime":1611790743059,"results":"30","hashOfConfig":"24"},{"size":1096,"mtime":1611704680770,"results":"31","hashOfConfig":"24"},{"size":82,"mtime":1611540645105,"results":"32","hashOfConfig":"24"},{"size":2413,"mtime":1611787332915,"results":"33","hashOfConfig":"24"},{"size":257,"mtime":1611540139611,"results":"34","hashOfConfig":"24"},{"size":2367,"mtime":1611787244479,"results":"35","hashOfConfig":"24"},{"size":103,"mtime":1611540883463,"results":"36","hashOfConfig":"24"},{"size":4100,"mtime":1611871299991,"results":"37","hashOfConfig":"24"},{"size":4075,"mtime":1611871069305,"results":"38","hashOfConfig":"24"},{"size":85,"mtime":1611617644033,"results":"39","hashOfConfig":"24"},{"size":217,"mtime":1611623718536,"results":"40","hashOfConfig":"24"},{"size":793,"mtime":1611715354265,"results":"41","hashOfConfig":"24"},{"size":85,"mtime":1611526724085,"results":"42","hashOfConfig":"24"},{"size":449,"mtime":1611714615480,"results":"43","hashOfConfig":"24"},{"size":1819,"mtime":1611790572815,"results":"44","hashOfConfig":"24"},{"size":80,"mtime":1611790572819,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"63km96",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"55"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/thiagoListaTarefas/frontend/src/reportWebVitals.js",[],["102","103"],"/var/www/thiagoListaTarefas/frontend/src/index.js",[],["104","105"],"/var/www/thiagoListaTarefas/frontend/src/App.js",["106","107"],"import React from 'react';\nimport { useRoutes } from 'hookrouter';\n\nimport HomeScreen from './components/HomeScreen';\nimport ListTask from './components/ListTask';\nimport RegisterTask from './components/RegisterTask';\nimport UpdateTask from './components/UpdateTask';\n\nconst routes = {\n  '/': () => <HomeScreen />,\n  '/listTask': () => <ListTask />\n}\n\nfunction App() {\n  return (useRoutes(routes));\n}\n\nexport default App;\n",["108","109"],"/var/www/thiagoListaTarefas/frontend/src/components/HomeScreen/index.js",["110","111"],"import React from 'react';\nimport imageHomeScreen from '../../image/homeScreen.jpeg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\nimport { A } from 'hookrouter';\n\nimport {\n  Container,\n  ImageHome,\n  ImageText,\n  ContainerSignIn\n} from './styled';\n\nexport default () => {\n\n  function handlePageListTask() {\n    navigator('/listTask')\n  }\n\n  return (\n    <Container>\n      <ImageHome src={imageHomeScreen} alt='Lista de Tarefa' />\n\n      <ContainerSignIn>\n        <ImageText>\n          Crie sua lista de tarefas e tenha um controle de tudo!!\n        </ImageText>\n\n        <A href='/listTask'>\n          <FontAwesomeIcon icon={faSignInAlt} style={{ width: '133px', height: '142px', marginLeft: '100px', color: '#376477' }} />\n        </A>\n\n      </ContainerSignIn>\n\n    </Container>\n  );\n}",["112","113"],"/var/www/thiagoListaTarefas/frontend/src/components/HomeScreen/styled.js",[],"/var/www/thiagoListaTarefas/frontend/src/components/ListTask/styled.js",[],"/var/www/thiagoListaTarefas/frontend/src/components/ListTask/index.js",["114","115","116","117"],"import React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { A } from 'hookrouter';\nimport { Table, Form } from 'react-bootstrap';\nimport ContainerGridItems from '../ContainerGridItems';\nimport axios from 'axios';\nimport iconSearch from '../../image/pesquiser.png';\nimport RegisterTask from '../RegisterTask';\nimport Ordanation from '../Ordination';\nimport Pagination from '../Pagination';\n\nimport {\n    Container,\n    ContainerHeader,\n    ContainerSearchRegister,\n    ContainerGridTask,\n    HeaderTitle,\n    ContainerPagination\n} from './styled';\n\nexport default () => {\n    const [tasks, setTasks] = useState([]);\n    const [loadTask, setLoadTask] = useState(true);\n    const [openModal, setOpenModal] = useState(false);\n    const [filterTask, setFilterTask] = useState('');\n    const [ordinationDesc, setOrdinationDesc] = useState(false);\n    const [ordinationAsc, setOrdinationAsc] = useState(false);\n    const [totalItems, setTotalItem] = useState(0);\n    const [pageCurrent, setPageCurrent] = useState(1);\n\n    const ITEM_FOR_PAGE = 10;\n    //- Contante que vai ter o link para listar todoas as tarefas através da api  \n    const API_URL_LIST_TASK = \"http://localhost:3002/gerenciador-tarefas\";\n\n    //- Useeffect que vai ao carregar aplicação vai fazer a comunicação com api e vai pegar todas as tarefas\n    useEffect(() => {\n        async function getTask() {\n\n            let order = ''\n\n            if (ordinationAsc) {\n                order = 'ASC';\n            } else if (ordinationDesc) {\n                order = 'DESC';\n            }\n\n            try {\n                const param = `?pag=${pageCurrent}&filtro-tarefa=${filterTask}&ordem=${order}&itens-por-pagina=${ITEM_FOR_PAGE}`;\n                let { data } = await axios.get(API_URL_LIST_TASK + param);\n                setTotalItem(data.totalItens);\n                setTasks(data.tarefas);\n            } catch (error) {\n                setTasks([]);\n            }\n        }\n\n        if (loadTask) {\n            getTask();\n            setLoadTask(false);\n        }\n    }, [loadTask, filterTask, pageCurrent, ordinationDesc, ordinationAsc]);\n\n    function handleFilterTask(event) {\n        setFilterTask(event.target.value);\n        setLoadTask(true);\n    }\n\n    function handleOrdination(event) {\n        event.preventDefault();\n\n        if (!ordinationAsc && !ordinationDesc) {\n            setOrdinationAsc(true);\n            setOrdinationDesc(false);\n        } else if (ordinationAsc) {\n            setOrdinationAsc(false);\n            setOrdinationDesc(true);\n        } else {\n            setOrdinationAsc(false);\n            setOrdinationDesc(false);\n        }\n        setLoadTask(true);\n    }\n\n    function handleChancePage(page) {\n        setPageCurrent(page);\n        setLoadTask(true);\n    }\n\n    return (\n        <Container>\n            <ContainerHeader>\n                <HeaderTitle>Lista de Tarefas</HeaderTitle>\n                <A href=\"/\">\n                    <FontAwesomeIcon icon={faTimes} style={{ margin: '15px', fontSize: '30px', textDecoration: 'none', color: '#000000' }} />\n                </A>\n            </ContainerHeader>\n\n            <ContainerSearchRegister>\n                <img src={iconSearch} style={{ width: '30px', height: '30px', margin: '15px', marginRight: '5px' }} />\n                <Form.Control type=\"text\" placeholder=\"Procure sua tarefa\" style={{ margin: '10px', backgroundColor: '#EBF1C5' }} onChange={handleFilterTask} value={filterTask} />\n                <RegisterTask openModal={openModal} loadTask={setLoadTask} />\n            </ContainerSearchRegister>\n\n\n            <ContainerGridTask>\n                <Table striped bordered hover responsive>\n                    <thead>\n                        <tr style={{ textAlign: 'center' }}>\n                            <th>Concluir</th>\n                            <th><a style={{ display: 'flex', justifyContent: 'center' }} onClick={handleOrdination}>Nome da Tarefa &nbsp; <Ordanation ordinationAsc={ordinationAsc} ordinationDesc={ordinationDesc} /></a> </th>\n                            <th>Ações</th>\n                        </tr>\n                    </thead>\n                    <ContainerGridItems tasks={tasks} loadTask={setLoadTask} />\n                </Table>\n            </ContainerGridTask>\n\n            <ContainerPagination>\n                <Pagination totalItems={totalItems} itemsForPage={ITEM_FOR_PAGE} pageCurrent={pageCurrent} changePage={handleChancePage}/>\n            </ContainerPagination>\n\n        </Container>\n    );\n}","/var/www/thiagoListaTarefas/frontend/src/components/ContainerGridItems/index.js",["118","119"],"import React, {useState} from 'react';\nimport CompleteTask from '../CompleteTask';\nimport RemoveTask from '../RemoveTask';\nimport UpdateTask from '../UpdateTask';\n\nimport {\n  Container\n} from './styled';\n\nexport default (props) => {\n\n  const [openModal, setOpenModal] = useState(false);\n\n  function completed(item) {\n    return item.concluida ? 'line-through' : 'none';\n  }\n\n  return (\n    <Container>\n      {props.tasks.map((item) =>\n        <tr key={item.id}>\n\n          <td width='10%'>\n            <CompleteTask taskComplete={item} loadTask={props.loadTask} hideIcon={item.concluida ? 'hidden' : null} />\n          </td>\n\n          <td width='80%' style={{ textDecoration: completed(item) }}>\n            {item.nome}\n          </td>\n\n          <td style={{ display: 'flex', justifyContent: 'center' }}>\n            {item.concluida === false &&\n              <UpdateTask taskUpdateId={item.id} loadTask={props.loadTask} openModal={openModal} />\n            }\n            <RemoveTask taskRemove={item} loadTask={props.loadTask} />\n          </td>\n\n        </tr>\n      )}\n    </Container>\n  );\n}","/var/www/thiagoListaTarefas/frontend/src/components/ContainerGridItems/styled.js",[],"/var/www/thiagoListaTarefas/frontend/src/components/CompleteTask/index.js",["120","121","122"],"import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport imageIconCheck from '../../image/concluir.svg';\n\nimport {\n  Container\n} from './styled';\n\nexport default (props) => {\n  const [displayModal, setDisplayModal] = useState(false);\n  const [displayModalErro, setDisplayModalErro] = useState(false);\n\n  const API_URL_CONCLUDE_TASK = 'http://localhost:3002/gerenciador-tarefas/';\n\n  function handleOpenModal(event) {\n    event.preventDefault();\n    setDisplayModal(true);\n  }\n\n  function handleCloseModal() {\n    setDisplayModal(false);\n  }\n\n  function handleCloseModalErro() {\n    setDisplayModalErro(false);\n  }\n\n  async function handleConcludeTask(event) {\n    event.preventDefault();\n\n    try {\n      let { tarefa } = await axios.put(API_URL_CONCLUDE_TASK + props.taskComplete.id + '/concluir');\n      setDisplayModal(false);\n      props.loadTask(true);\n    } catch (error) {\n      setDisplayModal(false);\n      setDisplayModalErro(true);\n    }\n  }\n\n  return (\n    <Container className={props.taskComplete.concluida}>\n\n      <img src={imageIconCheck} style={{width: '30px', height: '30px', cursor: 'pointer'} } onClick={handleOpenModal}/>\n\n      <Modal show={displayModal} onHide={handleCloseModal} centered aria-labelledby=\"contained-modal-title-vcenter\">\n        <Modal.Header closeButton>\n          <Modal.Title>Concluir Tarefa</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Deseja realmente concluir a seguinte tarefa?\n          <br/>\n          <strong>{props.taskComplete.nome}</strong>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleConcludeTask}> \n            Sim\n          </Button>\n          <Button variant=\"light\" onClick={handleCloseModal}> \n            Não\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={displayModalErro} onHide={handleCloseModalErro} centered aria-labelledby=\"contained-modal-title-vcenter\">\n        <Modal.Header closeButton>\n          <Modal.Title>Erro de conexão</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Erro ao concluir a tarefa, por favor tente novamente!\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"warning\" onClick={handleCloseModalErro}>\n            Continuar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n}","/var/www/thiagoListaTarefas/frontend/src/components/CompleteTask/styled.js",["123"],"import styled from 'styled-components';\nimport imageIconCheck from '../../image/concluir.svg';\n\n\nexport const Container = styled.span`\n    display: ${props => props.className ? 'none' : 'block'};\n    justify-content: center;\n    text-align: center;\n    \n`;\n","/var/www/thiagoListaTarefas/frontend/src/components/RemoveTask/index.js",["124","125","126"],"import React, { useState } from 'react';\nimport iconeRemove from '../../image/excluir.svg';\nimport { Modal, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nimport {\n  Container\n} from './styled';\n\nexport default (props) => {\n\n  const [displayModal, setDisplayModal] = useState(false);\n  const [displayModalErro, setDisplayModalErro] = useState(false);\n\n  const API_URL_TASK = \"http://localhost:3002/gerenciador-tarefas/\";\n\n  let text = \"Deseja realmente excluir a terafa?\";\n\n  function handleOpenModal(event) {\n    event.preventDefault();\n    setDisplayModal(true);\n  }\n\n  function handleCloseModal() {\n    setDisplayModal(false);\n  }\n\n  function handleCloseModalErro() {\n    setDisplayModalErro(false);\n    setDisplayModal(false);\n  }\n\n  async function handleRemoveTask(event) {\n    event.preventDefault();\n\n    try {\n      let {task} = await axios.delete(API_URL_TASK + props.taskRemove.id);\n      setDisplayModal(false);\n      props.loadTask(true);\n    } catch (error) {\n      //setDisplayModalErro(true);\n      setDisplayModal(false);\n    }\n  }\n\n  return (\n    <Container>\n      <img src={iconeRemove} onClick={handleOpenModal} style={{ width: '30px', height: '30px', cursor: 'pointer' }} />\n\n      <Modal show={displayModal} onHide={handleCloseModal} centered aria-labelledby=\"contained-modal-title-vcenter\">\n        <Modal.Header closeButton>\n          <Modal.Title>Remover Tarefa</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {text}\n          <br />\n          <strong>{props.taskRemove.nome}</strong>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleRemoveTask}>\n            Sim\n          </Button>\n          <Button variant=\"light\" onClick={handleCloseModal}>\n            Não\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={displayModalErro} onHide={handleCloseModalErro} centered aria-labelledby=\"contained-modal-title-vcenter\">\n        <Modal.Header closeButton>\n          <Modal.Title>Erro de conexão</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Erro ao remover a tarefa por favor, tente novamente!\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"warning\" onClick={handleCloseModalErro}>\n            Continuar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n}","/var/www/thiagoListaTarefas/frontend/src/components/RemoveTask/styled.js",[],"/var/www/thiagoListaTarefas/frontend/src/components/UpdateTask/index.js",["127","128"],"/var/www/thiagoListaTarefas/frontend/src/components/RegisterTask/index.js",["129","130"],"/var/www/thiagoListaTarefas/frontend/src/components/RegisterTask/styled.js",[],"/var/www/thiagoListaTarefas/frontend/src/models/task.model.js",[],"/var/www/thiagoListaTarefas/frontend/src/components/Ordination/index.js",["131"],"import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort, faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  Container,\n  FaSortContainer,\n  FaSortUpContainer,\n  FaSortDownContainer\n} from './styled';\n\nexport default (props) => {\n  return (\n    <Container>\n      <FaSortContainer faSorteAsc={props.ordinationAsc} faSorteDesc={props.ordinationDesc}>\n        <FontAwesomeIcon icon={faSort} />\n      </FaSortContainer>\n\n      <FaSortUpContainer faSorteUpAsc={props.ordinationAsc}>\n        <FontAwesomeIcon icon={faSortUp} />\n      </FaSortUpContainer>\n\n      <FaSortDownContainer faSorteDownDesc={props.ordinationDesc}>\n        <FontAwesomeIcon icon={faSortDown} />\n      </FaSortDownContainer>\n    </Container>\n  );\n}","/var/www/thiagoListaTarefas/frontend/src/components/UpdateTask/styled.js",[],"/var/www/thiagoListaTarefas/frontend/src/components/Ordination/styled.js",[],"/var/www/thiagoListaTarefas/frontend/src/components/Pagination/index.js",["132"],"/var/www/thiagoListaTarefas/frontend/src/components/Pagination/styled.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"133","replacedBy":"137"},{"ruleId":"135","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":20},{"ruleId":"139","severity":1,"message":"143","line":7,"column":8,"nodeType":"141","messageId":"142","endLine":7,"endColumn":18},{"ruleId":"133","replacedBy":"144"},{"ruleId":"135","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":14,"column":1,"nodeType":"148","endLine":37,"endColumn":2},{"ruleId":"139","severity":1,"message":"149","line":16,"column":12,"nodeType":"141","messageId":"142","endLine":16,"endColumn":30},{"ruleId":"133","replacedBy":"150"},{"ruleId":"135","replacedBy":"151"},{"ruleId":"146","severity":1,"message":"147","line":22,"column":1,"nodeType":"148","endLine":125,"endColumn":2},{"ruleId":"139","severity":1,"message":"152","line":25,"column":23,"nodeType":"141","messageId":"142","endLine":25,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":100,"column":17,"nodeType":"155","endLine":100,"endColumn":119},{"ruleId":"156","severity":1,"message":"157","line":111,"column":33,"nodeType":"155","endLine":111,"endColumn":117},{"ruleId":"146","severity":1,"message":"147","line":10,"column":1,"nodeType":"148","endLine":42,"endColumn":2},{"ruleId":"139","severity":1,"message":"152","line":12,"column":21,"nodeType":"141","messageId":"142","endLine":12,"endColumn":33},{"ruleId":"146","severity":1,"message":"147","line":10,"column":1,"nodeType":"148","endLine":81,"endColumn":2},{"ruleId":"139","severity":1,"message":"158","line":33,"column":13,"nodeType":"141","messageId":"142","endLine":33,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":45,"column":7,"nodeType":"155","endLine":45,"endColumn":120},{"ruleId":"139","severity":1,"message":"159","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":10,"column":1,"nodeType":"148","endLine":84,"endColumn":2},{"ruleId":"139","severity":1,"message":"160","line":37,"column":12,"nodeType":"141","messageId":"142","endLine":37,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":48,"column":7,"nodeType":"155","endLine":48,"endColumn":119},{"ruleId":"146","severity":1,"message":"147","line":12,"column":1,"nodeType":"148","endLine":140,"endColumn":2},{"ruleId":"153","severity":1,"message":"154","line":80,"column":7,"nodeType":"155","endLine":80,"endColumn":119},{"ruleId":"146","severity":1,"message":"147","line":11,"column":1,"nodeType":"148","endLine":128,"endColumn":2},{"ruleId":"153","severity":1,"message":"154","line":67,"column":9,"nodeType":"155","endLine":67,"endColumn":93},{"ruleId":"146","severity":1,"message":"147","line":12,"column":1,"nodeType":"148","endLine":28,"endColumn":2},{"ruleId":"146","severity":1,"message":"147","line":8,"column":1,"nodeType":"148","endLine":67,"endColumn":2},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],["161"],["162"],"no-unused-vars","'RegisterTask' is defined but never used.","Identifier","unusedVar","'UpdateTask' is defined but never used.",["161"],["162"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'handlePageListTask' is defined but never used.",["161"],["162"],"'setOpenModal' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'tarefa' is assigned a value but never used.","'imageIconCheck' is defined but never used.","'task' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]